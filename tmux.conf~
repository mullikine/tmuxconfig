# vim: ft=tmux:

# tmux-tmux-code git commit 648ce2f

# search window name
bind "'" command-prompt -p index "select-window -t ':%%'"

bind M-Space next-layout

set -g display-time 2000

set -g buffer-limit 30
set -g set-titles on
set -g set-titles-string "#h #S"
set -g renumber-windows on
set -g word-separators " -_@:=.;()[]/\\{}\"\',"

#set -g history-limit 500
# Have to hope that the glibc memory leak is fixed
set -g history-limit 999999999
#set -g default-shell '/home/shane/local/bin/zsh'
#set -g default-shell '/bin/bash'
set -g default-shell '/usr/bin/zsh'

set -g set-clipboard on
set -g default-terminal "screen-256color"
setenv -u -g COLUMNS
setenv -u -g LINES
#set -g status-utf8 on # tmux 2.0

set -g mouse on # tmux 2.3

## obsolete since 2015
#set -g mouse-resize-pane on # incompatible with select-window in 1.5
#set -g mouse-select-pane on
#set -g mouse-select-window on
#setw -g c0-change-interval 200  #nicm is going to make a new solution
#setw -g c0-change-trigger 50

# Don't upgrade yet
## mouse mode on
## don't want it on.
#set -g mouse on
#setw -g mode-mouse off
#setw -g mode-mouse copy-mode # this stopped working?? what did it do?
##defaults
##bind -n   MouseDown1Pane select-pane -t=; send-keys -M
##bind -n MouseDown1Status select-window -t=
##bind -n   MouseDrag1Pane copy-mode -M
##bind -n MouseDrag1Border resize-pane -M
#
## mouse mode off
#unbind -n MouseDrag1Pane
#unbind -temacs-copy MouseDrag1Pane

set -g base-index 1
set -g status-interval 30
set -g status-left-length 40
set -g status-right-length 40
#set -g pane-border-bg black
set -g pane-border-bg default
set -g pane-border-fg colour234
#set -g pane-active-border-bg black
set -g pane-active-border-bg default
set -g pane-active-border-fg colour234
set -g pane-active-border-bg colour234
set -g status-right ""
set -g status-left 'F1 #S '
set -g mode-keys emacs # overrides EDITOR
set -g escape-time 1000 # speed up vim (increase on very slow connections) and timeoutlen in vimrc
# Need CWD for the event the session directory is deleted and remade
set -g update-environment "TMUX_NOTES CWD TMUX_PROJECT PYTHONPATH PATH DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY" #LC_TYPE LANG PAGER TMUX
#set -g lock-command "PERL5LIB=/usr/share/perl5/vendor_perl asciiquarium"
# fine to loave this on
#set -g lock-command "tmux-screensaver.sh &>/dev/null"
set -g lock-command "$MYGIT/pipes.sh/pipes.sh -f 100 -s 15 -r 20 -p 2 -t 3"
# This will make all sessions start asciiquarium, which is
# unacceptable.
#set -g lock-after-time 5000
#set -g lock-server on

# 160 0xa0 red
# 124 0x7c dark red
# 233 0xe9 dark grey
# 234 0xea 'not as dark' grey
# 235 0xeb 'just readable' grey
# 236 0xec 'more clearly readable' grey
# 244 0xf4 light grey
# 250 0xfa lighter grey        regular windows
# 254 0xfe almost white        subsession window-name
#set -g message-bg black
###set -g message-bg default
###set -g message-fg colour134
###set -g status-right-fg colour124
###set -g status-left-fg colour124
###set -g status-bg black
#set -g status-bg default
###set -g window-status-format "#[fg=colour244]#I #[fg=colour240]#W"
###set -g window-status-current-format "#[fg=colour254]#I #[fg=colour134]#W"
set -g window-status-format "#I #W"
#set -g window-status-current-format "#I #[fg=colour237]#[bg=colour078]#W"
#set -g window-status-current-format "#I #[fg=colour237]#[bg=colour105]#W"
set -g window-status-current-format "#[bg=colour063]#[fg=colour255]#I #[bg=default]#[fg=default]#W"

setw -g other-pane-width 81
setw -g other-pane-height 30
setw -g clock-mode-colour colour234
setw -g clock-mode-style 24
setw -g mode-bg colour25
setw -g mode-fg colour254
setw -g window-status-fg colour234
setw -g window-status-current-fg white

setw -g alternate-screen on
setw -g word-separators ' -_@/()'
#setw -g utf8 on
setw -g automatic-rename off
setw -g xterm-keys on
setw -g aggressive-resize on

set -g prefix "F1"
bind V capture-pane -J -S -32768 \; run 'FNAME="$BULK/programs/tmux/capture/tmux_capture$(tmux display-message -p "_#H_#S:#I(#W).#P")_date:$(date +%d.%m.%y).txt"; rm "$FNAME"; tmux save-buffer "$FNAME" \; neww -n "vim-capture" "fastvim -c \"ToggleBrightness\" \"$FNAME\""'
#bind R run 'tmux-edit-capture-full.sh'
bind A run 'tmux-capture.sh -e'
bind M-a run 'tmux-capture.sh' # not really needed anymore. Can just do an A then a C-M-d
bind Y capture-pane -J -S -32768 \; run 'tmux save-buffer $BULK/programs/tmux/capture/tmux_capture$(tmux display-message -p "_#H_#S:#I(#W).#P")_date:$(date +%d.%m.%y).txt'
bind ! run 'tmux-breakpane-once.sh'
bind M-! run 'tmux-break-other-panes.sh'
bind M-b run 'tmux-breakpane.sh'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind F1 send-prefix #depth 2
bind -n F2 send-prefix #depth 2
bind -n F3 send-prefix \; send-prefix #depth 3
bind -n F4 send-prefix \; send-prefix \; send-prefix #depth 4
bind -n F5 send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 5
bind -n F6 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 6
bind -n F7 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 7
bind -n F8 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 8
bind -n F9 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 9
bind -n F10 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 10
bind -n F11 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 11
bind -n F12 send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix \; send-prefix #depth 12
# run -b is required to prevent xclip from hanging
# unfortunately, xclip is still hanging. i'm not sure if this used to
# happen with neww or not
bind i display-message "copied session name: #{session_name}:" \; run -b 'tmux-copy-session-name.sh'
bind I display-message "copied pane name: #{session_name}:#{window_name}.#{pane_index}" \; run -b 'tmux-copy-pane-name.sh'
bind J neww 'fastvim ~/.tmux.conf'
#bind K neww 'vimdiff ~/.vimrc ~/.tmux-copy-mode-vimrc'
bind K run "tmux detach-client -s \"$(tmux display-message -p '#{session_name}')\""

#bind -n M-F10 send-keys "Escape" \; send-keys -l "[21;3~"

# $BULK/source/tarball/xterm-278/xtermcap.c
# exception: Home Key is HOME in tmux but HOM in xtermcap
# /usr/share/X11/xkb/symbols/pc
# these actually send C-Up etc because C is still held down. How to
# avoid this?
bind -n C-M-k send-keys "Up"
bind -n C-M-j send-keys "Down"
bind -n C-M-h send-keys "Left"
bind -n C-M-l send-keys "Right"
bind -n C-M-y send-keys "END" # Can already use Fn-Right
bind -n C-M-b send-keys "HOME" # Can already use Fn-Left
#bind -n C-M-h send-keys "END" # Can already use Fn-Right
#bind -n C-M-l send-keys "HOMM" # Can already use Fn-Left
bind -n C-M-i send-keys "IC" # Insert key. See xterm-278/xtermcap.c
bind -n C-M-u send-keys "DC" # Delete key. See xterm-278/xtermcap.c
bind -n C-M-p send-keys "Pageup"
bind -n C-M-n send-keys "Pagedown"
bind -n C-M-o send-keys "BSpace"

# Shift doesn't work like this unfortunately (it's the same binding
# as without shift)
#bind -n C-M-K send-keys Up Up Up
#bind -n C-M-J send-keys Down Down Down
#bind -n C-M-H send-keys Left Left Left
#bind -n C-M-L send-keys Right Right Right
bind -n C-M-Up run "tmux send-keys Up; sleep 0.05; tmux send-keys Up; sleep 0.05; tmux send-keys Up; sleep 0.05; tmux send-keys Up; sleep 0.05; tmux send-keys Up"
bind -n C-M-Down run "tmux send-keys Down; sleep 0.05; tmux send-keys Down; sleep 0.05; tmux send-keys Down; sleep 0.05; tmux send-keys Down; sleep 0.05; tmux send-keys Down"
bind -n C-M-Left run "tmux send-keys Left; sleep 0.05; tmux send-keys Left; sleep 0.05; tmux send-keys Left; sleep 0.05; tmux send-keys Left; sleep 0.05; tmux send-keys Left"
bind -n C-M-Right run "tmux send-keys Right; sleep 0.05; tmux send-key